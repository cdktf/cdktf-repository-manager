name: "Diff CDKTF Stack"

on:
  workflow_call:
    inputs:
      stacks:
        required: true
        description: JSON-stringified list of stacks to deploy, e.g. # [{ "stack": "my-stack" }]
        type: string
      ref:
        required: true
        description: The SHA ref of the commit to check out
        type: string
      repository:
        required: true
        description: The fully qualified name of the repository to check out the commit from
        type: string

jobs:
  terraform:
    name: "Terraform CDK Diff"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(inputs.stacks)}}
      max-parallel: 10

    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          ref: ${{ inputs.ref }}
          repository: ${{ inputs.repository }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36
        with:
          terraform_version: 1.8.5
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
          terraform_wrapper: false

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: "18"

      - name: Install
        run: yarn install
      - name: Synth
        run: "$(yarn bin)/cdktf synth"
      - name: Plan
        id: plan
        run: |
          set -o pipefail
          cd cdktf.out/stacks/${{ matrix.stack }}
          rm -rf .terraform 
          terraform init 
          terraform plan -no-color | tee ../../../plan_stdout_${{ matrix.stack }}.txt; echo $?
          set +o pipefail
        continue-on-error: true
      - name: Save results into a variable
        id: plan_outcome
        run: echo "value=${{steps.plan.outcome}}" >> $GITHUB_OUTPUT
      - name: Comment the plan output on the PR
        if: contains(github.event_name, 'pull_request') # pull_request or pull_request_target
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GH_COMMENT_TOKEN }}
          script: |
            const {resolve} = require('path')
            const scriptPath = resolve("./.github/lib/comment-plan-output")
            require(scriptPath)({
              context, 
              github,
              planOutcome: "${{steps.plan.outcome}}",
              pusher: "${{github.actor}}",
              actionName: "${{github.event_name}}",
              workingDirectory: "${{env.tf_actions_working_dir}}",
              workflowName: "${{github.workflow}}",
              stackName: "${{matrix.stack}}" 
            })
      - name: Fail this check if the plan was not successful
        if: steps.plan_outcome.outputs.value != 'success'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            core.setFailed('Terraform plan was not successful')
