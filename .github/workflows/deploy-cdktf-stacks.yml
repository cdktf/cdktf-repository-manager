name: "Deploy CDKTF Stack"

on:
  workflow_call:
    inputs:
      stacks:
        required: true
        description: JSON-stringified list of stacks to deploy, e.g. # [{ "stack": "my-stack" }]
        type: string
      upgrade-repositories:
        required: true
        type: boolean

jobs:
  terraform:
    name: "Terraform CDK Deploy"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(inputs.stacks)}}
      max-parallel: 10

    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd
        with:
          terraform_version: 1.9.5
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
          terraform_wrapper: false

      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: "18"

      - name: Install
        run: yarn install

      - name: Deploy
        run: "$(yarn bin)/cdktf deploy --auto-approve '${{ matrix.stack }}'"
        env:
          TERRAFORM_CLOUD_TOKEN: ${{ secrets.TF_CLOUD_TOKEN }}
          CDKTF_LOG_LEVEL: all

      - name: Send failures to Slack
        if: ${{ failure() && !cancelled() }}
        uses: slackapi/slack-github-action@70cd7be8e40a46e8b0eced40b0de447bdb42f68e # v1.26.0
        with:
          payload: |
            {
              "provider_name": "stack deploy ${{ matrix.stack }}",
              "run_url": "https://github.com/cdktf/cdktf-repository-manager/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.FAILURE_SLACK_WEBHOOK_URL }}

  upgrade:
    if: inputs.upgrade-repositories
    needs:
      - terraform
    uses: ./.github/workflows/upgrade-repositories.yml
    secrets: inherit
