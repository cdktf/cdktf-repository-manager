name: "Deploy CDKTF Stack"

on:
  workflow_call:
    inputs:
      stacks:
        required: true
        description: JSON-stringified list of stacks to deploy, e.g. # [{ "stack": "my-stack" }]
        type: string
      upgrade-repositories:
        required: true
        type: boolean

jobs:
  terraform:
    name: "Terraform CDK Deploy"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(inputs.stacks)}}
      max-parallel: 10

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd
        with:
          terraform_version: 1.12.2
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
          terraform_wrapper: false

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "20"

      - name: Install
        run: yarn install

      - name: Deploy
        run: "$(yarn bin)/cdktf deploy --auto-approve '${{ matrix.stack }}'"
        env:
          TERRAFORM_CLOUD_TOKEN: ${{ secrets.TF_CLOUD_TOKEN }}
          CDKTF_LOG_LEVEL: all

      - name: Send failures to Slack
        if: ${{ failure() && !cancelled() }}
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        with:
          webhook: ${{ secrets.FAILURE_SLACK_WEBHOOK_URL }}
          webhook-type: webhook-trigger
          payload: |
            {
              "provider_name": "stack deploy ${{ matrix.stack }}",
              "run_url": "https://github.com/cdktf/cdktf-repository-manager/actions/runs/${{ github.run_id }}"
            }

  upgrade:
    if: inputs.upgrade-repositories
    needs:
      - terraform
    uses: ./.github/workflows/upgrade-repositories.yml
    secrets: inherit
