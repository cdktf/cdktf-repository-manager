name: "Delete stale branches in provider repos"
on:
  workflow_dispatch: {}
concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
  build-provider-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - id: set-matrix
        run: |
          provider=$(jq -rcM "{ provider: keys }" provider.json)
          echo "matrix=$provider" >> $GITHUB_OUTPUT
  cleanup-branches:
    needs: build-provider-matrix
    name: "Clean up branches"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.build-provider-matrix.outputs.matrix)}}
      max-parallel: 10
    steps:
      - name: Checkout cdktf-provider-${{ matrix.provider }} Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: cdktf/cdktf-provider-${{ matrix.provider }}
          token: ${{ secrets.GH_COMMENT_TOKEN }}
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name "team-tf-cdk"
          git config user.email "github-team-tf-cdk@hashicorp.com"
      - name: Delete old branches from previous repo-manager runs
        run: git branch -r | egrep -o "upgrade-provider-project.*" | xargs -n 1 git push origin --delete
        continue-on-error: true # don't fail the run if these branches never existed
      - name: Delete old branches from when we used to build providers against cdktf@next
        run: git branch -r | egrep -o "cdktf-next-pr.*" | xargs -n 1 git push origin --delete
        continue-on-error: true # don't fail the run if these branches never existed
      - name: Delete old renovate branches that were never used
        run: git branch -r | egrep -o ".*renovate.*" | xargs -n 1 git push origin --delete
        continue-on-error: true # don't fail the run if these branches never existed
      - name: Delete old update-main branch that has not been used in 3 years
        run: git branch -r | egrep -o "update-main" | xargs -n 1 git push origin --delete
        continue-on-error: true # don't fail the run if these branches never existed
      - name: Delete old Projen branch name convention that has not been used in 3 years # the one we use nowadays is github-actions/upgrade-main
        run: git branch -r | egrep -o "github-actions/upgrade" | xargs -n 1 git push origin --delete
        continue-on-error: true # don't fail the run if these branches never existed
      - name: Delete another Projen branch name convention that has not been used in 3 years
        run: git branch -r | egrep -o "github-actions/upgrade-dependencies" | xargs -n 1 git push origin --delete
        continue-on-error: true # don't fail the run if these branches never existed
