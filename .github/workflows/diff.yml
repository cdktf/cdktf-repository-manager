name: "Repository Manager"

on: [pull_request]

jobs:
  terraform:
    name: "Terraform CDK Diff"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.7
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}

      - uses: actions/setup-node@v1
        with:
          node-version: "14"

      - run: yarn install
      - name: Synth
        run: "$(yarn bin)/cdktf synth"
      - name: Plan
        id: plan
        run: |
          set -o pipefail
          cd cdktf.out/stacks/repos 
          rm -rf .terraform 
          terraform init 
          terraform plan -no-color | tee ../../../plan_stdout.txt; echo $?
          set +o pipefail
        continue-on-error: true
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GH_COMMENT_TOKEN }}
          script: |
            const { readFileSync } = require("fs")
            const data = readFileSync('./plan_stdout.txt', 'utf-8')
            const isLargeOutput = data.length > 65000
            const refreshLinesRegex = /: Refreshing state\.\.\.\s*\[id=/i

            let plan = data
            if (isLargeOutput)
                plan = plan.split("\n").filter(line => !refreshLinesRegex.test(line)).join("\n")

            plan = plan.length > 65000 ? `${plan.substring(0, 65000)}...` : plan

            const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`
            ${plan}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
